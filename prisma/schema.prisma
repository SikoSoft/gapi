// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Action {
  id         Int         @id @default(autoincrement())
  type       String      @db.VarChar(64)
  desc       String      @db.VarChar(255)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  occurredAt DateTime    @default(now())
  userId     String?     @db.Uuid
  tags       ActionTag[]
}

model ActionTag {
  actionId Int    @default(0)
  //tagId    Int    @default(0)
  label    String @db.VarChar(128)
  action   Action @relation(fields: [actionId], references: [id], onDelete: Cascade)
  tag      Tag    @relation(fields: [label], references: [label], onDelete: Cascade)

  @@id([actionId, label])
}

model Leaderboard {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(64)
  score    Int      @default(0)
  duration Int      @default(0)
  time     DateTime @updatedAt
  ip       String   @db.VarChar(64)
}

model Tag {
  //id    Int    @id @default(autoincrement())
  label     String      @unique @db.VarChar(128)
  actionTag ActionTag[]
}

// model User {
//   id        String     @id @db.Uuid
//   username  String     @unique @db.VarChar(64)
//   firstName String     @db.VarChar(64)
//   lastName  String     @db.VarChar(64)
//   password  String     @db.VarChar(255)
//   roles     UserRole[]
// }

// model UserRole {
//   userId  String   @db.Uuid
//   roleId  Int      @default(0)
//   addedAt DateTime @updatedAt
//   user    User     @relation(fields: [userId], references: [id])

//   //role    Role     @relation(fields: [roleId], references: [id])
//   @@id([userId(), roleId()])
// }

// model Role {
//   id    Int    @id @default(autoincrement())
//   label String @db.VarChar(128)
// }

// model Ott {
//   userId       String   @db.Uuid
//   oneTimeToken String   @id @db.VarChar(128)
//   authToken    String   @db.VarChar(128)
//   createdAt    DateTime @default(now())
// }

// model LoginAttempt {
//   id          Int      @id @default(autoincrement())
//   userId      String   @db.Uuid
//   attemptedAt DateTime @updatedAt
//   ip          String   @db.VarChar(128)
// }
